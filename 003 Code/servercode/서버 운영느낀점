1. Database를 연결하고 close를 하지않으면 시간이 지나면 timeout으로 db서버가 끊긴다. 

2. CNN은 학습시키기에 많은 데이터가 필요하고, 키워드 유사도로만 사용한다면 정확도가 떨어진다.

3. 에러의 예외처리를 넣어주지 않으면 에러가 언제 무엇을 의미하는지 알기 어렵고, 시간이 따로 찍히지 않아 언제 발생한 에러인지 알기 어렵다.

4. 학생들의 질문데이터로 문제를 제출하는것은 너무 다양하게 출제했기때문에 다시 가공해야한다.

5. CNN이 새로운 질문을 인식하지 못하는 이유는 여러 가지가 있다.

    교육 데이터 부족: 모형이 충분한 데이터에 대해 교육을 받지 않은 경우 새 질문을 인식하는 방법을 배우지 못했을 수 있습니다. 모델의 정확도를 높이기 위해 교육 예제를 더 추가해야 할 수도 있습니다.

    보이지 않는 단어: 새 질문에 모델이 이전에 보지 못한 단어가 포함되어 있으면 의도를 인식하지 못할 수 있습니다. 모델 교육에 사용되는 사전에 이러한 새 단어를 추가해야 할 수도 있습니다.

    잘못된 전처리: 새 질문이 교육 데이터와 동일한 방식으로 전처리되지 않으면 모델이 의도를 인식하지 못할 수 있습니다. 새 질문이 교육 데이터와 동일한 방식으로 사전 처리되는지 확인합니다.

    과적합: 모델이 교육 데이터에 지나치게 적합한 경우 새 질문을 인식하지 못할 수 있습니다. 과적합을 방지하기 위해 모형의 초 매개변수를 조정하거나 다른 모형 아키텍처를 사용해야 할 수 있습니다.

    모델 복잡성: 모형이 너무 복잡하거나 충분히 복잡하지 않으면 새 질문을 인식하지 못할 수 있습니다. 정확도를 높이기 위해 모델의 아키텍처와 하이퍼 파라미터를 조정해야 할 수도 있습니다.

6. 텔레그램 사용자가 동시에 과제제출, 인공지능답변 기능을 선택했을때 내부코드의 변수가 달라져서 버그가 발생한다. 
    ex) 과제제출을 했는데, 인공지능 답변데이터로 들어간다던지 꼬이는 경우가 있음

7. 텔레그램의 handler의 MessageHandler, CommandHandler, ConversationHandler가 있는데    
    MessageHandler는 텔레그램의 문자가 입력되었을때 작동하는 핸들러이다. 치명적인 단점은 메세지핸들러가 상위에 있으면 따로 종료하지 않는 이상 이 핸들러만 작동한다.

    CommandHandler는 텔레그램의 "/keyword"와 같이 /로 이루어진 커맨드가 입력되었을때만 실행한다.

    ConversationHandler는 fallback과 함께 특정한 조건이 되면 MessageHandler를 한번만 사용할 수 있게 만들 수 있다.
        conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start_handler)],
        states={
            ENTER_NAME: [MessageHandler(Filters.text & ~Filters.command, register_handler)],
        },
        fallbacks=[]
        )

8. 파이썬의 schedule 함수를 사용하면 새로운 데이터를 넣었을때 서버를 재부팅할 필요 없이 백그라운드에서 실행시켜준다.
    ex) schedule.run_pending()

9. 구글 스프레드 시트와 Database를 연동하면 매우 편하게 데이터를 입력, 출력할 수 있다. 대신 구글 스프레드 시트 api키가 필요하다. 자세한 방법은 검색해보면 잘 나온다.

10. now.weekday() == 1에서 1은 화요일, 0은 월요일을 의미한다.

11. github, 티스토리 등 온라인에 올릴때 실수로 BOT_token, Database의 정보를 노출하지 않게 조심하자.